import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:timezone/data/latest_all.dart' as tz;
import 'package:timezone/timezone.dart' as tz;

class NotificationService {
  static final FlutterLocalNotificationsPlugin _notificationsPlugin =
      FlutterLocalNotificationsPlugin();

  static const int timerNotificationId =
      999; // ID –¥–ª—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞

  static Future<void> initialize() async {
    print('üîî NotificationService: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è timezone
    try {
      tz.initializeTimeZones();

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Ç–∞–π–º–∑–æ–Ω—É –ø–æ offset —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
      final now = DateTime.now();
      final offset = now.timeZoneOffset;
      final offsetInHours = offset.inHours;

      print(
        'üîî NotificationService: UTC offset: $offset (UTC${offsetInHours >= 0 ? '+' : ''}$offsetInHours)',
      );

      // –ö–∞—Ä—Ç–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Ç–∞–π–º–∑–æ–Ω –ø–æ UTC offset
      // –†–æ—Å—Å–∏—è –∏–º–µ–µ—Ç 11 —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤ –æ—Ç UTC+2 –¥–æ UTC+12
      String timeZoneName;
      switch (offsetInHours) {
        case 2:
          timeZoneName = 'Europe/Kaliningrad'; // –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥
          break;
        case 3:
          timeZoneName = 'Europe/Moscow'; // –ú–æ—Å–∫–≤–∞, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥
          break;
        case 4:
          timeZoneName = 'Europe/Samara'; // –°–∞–º–∞—Ä–∞, –ò–∂–µ–≤—Å–∫
          break;
        case 5:
          timeZoneName = 'Asia/Yekaterinburg'; // –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, –ü–µ—Ä–º—å
          break;
        case 6:
          timeZoneName = 'Asia/Omsk'; // –û–º—Å–∫
          break;
        case 7:
          timeZoneName = 'Asia/Novosibirsk'; // –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫
          break;
        case 8:
          timeZoneName = 'Asia/Irkutsk'; // –ò—Ä–∫—É—Ç—Å–∫, –£–ª–∞–Ω-–£–¥—ç
          break;
        case 9:
          timeZoneName = 'Asia/Yakutsk'; // –Ø–∫—É—Ç—Å–∫, –ß–∏—Ç–∞
          break;
        case 10:
          timeZoneName = 'Asia/Vladivostok'; // –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫, –•–∞–±–∞—Ä–æ–≤—Å–∫
          break;
        case 11:
          timeZoneName = 'Asia/Magadan'; // –ú–∞–≥–∞–¥–∞–Ω, –°–∞—Ö–∞–ª–∏–Ω
          break;
        case 12:
          timeZoneName = 'Asia/Kamchatka'; // –ö–∞–º—á–∞—Ç–∫–∞
          break;
        default:
          // –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∞–π–º–∑–æ–Ω –∏–ª–∏ –µ—Å–ª–∏ offset –Ω–µ —Ü–µ–ª—ã–π —á–∞—Å
          timeZoneName = 'UTC';
          print(
            'üîî NotificationService: ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π offset, –∏—Å–ø–æ–ª—å–∑—É–µ–º UTC',
          );
      }

      print('üîî NotificationService: –û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–∞—è —Ç–∞–π–º–∑–æ–Ω–∞: $timeZoneName');
      tz.setLocalLocation(tz.getLocation(timeZoneName));

      final localTimeZone = tz.local;
      print('üîî NotificationService: Timezone —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: $localTimeZone');

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º offset —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Ç–∞–π–º–∑–æ–Ω—ã —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º
      final systemOffset = DateTime.now().timeZoneOffset.inHours;
      final tzOffset = tz.TZDateTime.now(tz.local).timeZoneOffset.inHours;
      if (systemOffset != tzOffset && systemOffset != 0) {
        print('üîî NotificationService: ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ offset!');
        print('üîî NotificationService: –°–∏—Å—Ç–µ–º–Ω—ã–π offset: UTC+$systemOffset');
        print('üîî NotificationService: Timezone offset: UTC+$tzOffset');
        print('üîî NotificationService: –ù–∞ —Ä–µ–∞–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ —ç—Ç–æ –Ω–µ –ø—Ä–æ–±–ª–µ–º–∞');
      }
    } catch (e) {
      print('üîî NotificationService: –û–®–ò–ë–ö–ê –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ timezone: $e');
      print('üîî NotificationService: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∞–π–º–∑–æ–Ω—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
    }

    const AndroidInitializationSettings initializationSettingsAndroid =
        AndroidInitializationSettings('@mipmap/ic_launcher');

    const DarwinInitializationSettings initializationSettingsIOS =
        DarwinInitializationSettings(
          requestAlertPermission: true,
          requestBadgePermission: true,
          requestSoundPermission: true,
        );

    const InitializationSettings initializationSettings =
        InitializationSettings(
          android: initializationSettingsAndroid,
          iOS: initializationSettingsIOS,
        );

    try {
      await _notificationsPlugin.initialize(initializationSettings);
      print('üîî NotificationService: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');

      // –°–æ–∑–¥–∞—ë–º notification channel –¥–ª—è Android 8.0+ (API 26+)
      await _createNotificationChannel();

      print('üîî NotificationService: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    } catch (e) {
      print('üîî NotificationService: –û–®–ò–ë–ö–ê –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–∞: $e');
    }
  }

  /// –°–æ–∑–¥–∞–Ω–∏–µ notification channel –¥–ª—è Android 8.0+
  static Future<void> _createNotificationChannel() async {
    print('üîî NotificationService: –°–æ–∑–¥–∞–Ω–∏–µ notification channel...');

    const AndroidNotificationChannel channel = AndroidNotificationChannel(
      'timer_channel', // ID –∫–∞–Ω–∞–ª–∞ (–¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å —Ç–µ–º, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö)
      'Timer Notifications', // –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
      description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–∞–π–º–µ—Ä–∞ –æ—Ç–¥—ã—Ö–∞',
      importance: Importance.max,
      playSound: true,
      enableVibration: true,
      showBadge: true,
    );

    try {
      await _notificationsPlugin
          .resolvePlatformSpecificImplementation<
            AndroidFlutterLocalNotificationsPlugin
          >()
          ?.createNotificationChannel(channel);

      print(
        'üîî NotificationService: Notification channel —Å–æ–∑–¥–∞–Ω: ${channel.id}',
      );
    } catch (e) {
      print('üîî NotificationService: –û–®–ò–ë–ö–ê –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ channel: $e');
    }
  }

  static Future<void> requestPermissions() async {
    print('üîî NotificationService: –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π...');

    try {
      final androidPlugin = _notificationsPlugin
          .resolvePlatformSpecificImplementation<
            AndroidFlutterLocalNotificationsPlugin
          >();

      if (androidPlugin != null) {
        // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        final notificationPermission = await androidPlugin
            .requestNotificationsPermission();
        print(
          'üîî NotificationService: Android —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $notificationPermission',
        );

        // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Ç–æ—á–Ω—ã–µ –±—É–¥–∏–ª—å–Ω–∏–∫–∏ (–¥–ª—è Android 12+)
        final exactAlarmPermission = await androidPlugin
            .requestExactAlarmsPermission();
        print(
          'üîî NotificationService: Android —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Ç–æ—á–Ω—ã–µ –±—É–¥–∏–ª—å–Ω–∏–∫–∏: $exactAlarmPermission',
        );

        if (exactAlarmPermission != true) {
          print(
            'üîî NotificationService: ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Ç–æ—á–Ω—ã–µ –±—É–¥–∏–ª—å–Ω–∏–∫–∏!',
          );
          print(
            'üîî NotificationService: –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ñ–æ–Ω–µ.',
          );
          print(
            'üîî NotificationService: –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ "–¢–æ—á–Ω—ã–µ –±—É–¥–∏–ª—å–Ω–∏–∫–∏"',
          );
        }
      }

      final iosPermission = await _notificationsPlugin
          .resolvePlatformSpecificImplementation<
            IOSFlutterLocalNotificationsPlugin
          >()
          ?.requestPermissions(alert: true, badge: true, sound: true);
      print('üîî NotificationService: iOS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ: $iosPermission');
    } catch (e) {
      print('üîî NotificationService: –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: $e');
    }
  }

  /// –ü–æ–∫–∞–∑–∞—Ç—å FCM —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–¥–ª—è foreground)
  static Future<void> showFCMNotification({
    required String title,
    required String body,
  }) async {
    print('üîî NotificationService: –ü–æ–∫–∞–∑ FCM —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (foreground)');

    const AndroidNotificationDetails androidPlatformChannelSpecifics =
        AndroidNotificationDetails(
          'timer_channel',
          'Timer Notifications',
          channelDescription: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–∞–π–º–µ—Ä–∞ –æ—Ç–¥—ã—Ö–∞',
          importance: Importance.max,
          priority: Priority.high,
          showWhen: true,
          playSound: true,
          enableVibration: true,
        );

    const DarwinNotificationDetails iOSPlatformChannelSpecifics =
        DarwinNotificationDetails(
          presentAlert: true,
          presentBadge: true,
          presentSound: true,
        );

    const NotificationDetails platformChannelSpecifics = NotificationDetails(
      android: androidPlatformChannelSpecifics,
      iOS: iOSPlatformChannelSpecifics,
    );

    try {
      await _notificationsPlugin.show(
        997, // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è FCM —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        title,
        body,
        platformChannelSpecifics,
      );
      print('üîî NotificationService: FCM —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ');
    } catch (e) {
      print('üîî NotificationService: –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø–æ–∫–∞–∑–µ FCM —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
    }
  }

  /// –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–∞–π–º–µ—Ä–∞
  static Future<void> scheduleTimerEndNotification(int seconds) async {
    print(
      'üîî NotificationService: –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ $seconds —Å–µ–∫—É–Ω–¥...',
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Ç–æ—á–Ω—ã–µ –±—É–¥–∏–ª—å–Ω–∏–∫–∏ (Android 12+)
    try {
      final androidPlugin = _notificationsPlugin
          .resolvePlatformSpecificImplementation<
            AndroidFlutterLocalNotificationsPlugin
          >();

      if (androidPlugin != null) {
        final canScheduleExactAlarms = await androidPlugin
            .canScheduleExactNotifications();
        print(
          'üîî NotificationService: –ú–æ–∂–Ω–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $canScheduleExactAlarms',
        );

        if (canScheduleExactAlarms != true) {
          print(
            'üîî NotificationService: ‚ö†Ô∏è –ù–ï–¢ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Ç–æ—á–Ω—ã–µ –±—É–¥–∏–ª—å–Ω–∏–∫–∏!',
          );
          print(
            'üîî NotificationService: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ñ–æ–Ω–µ –ù–ï –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.',
          );
        }
      }
    } catch (e) {
      print('üîî NotificationService: –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: $e');
    }

    // –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
    await cancelTimerNotification();

    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º tz.TZDateTime.now —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–∫–∞–ª—å–Ω–æ–π —Ç–∞–π–º–∑–æ–Ω–æ–π
      final now = tz.TZDateTime.now(tz.local);
      final scheduledTime = now.add(Duration(seconds: seconds));

      print('üîî NotificationService: –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è (${tz.local.name}): $now');
      print('üîî NotificationService: –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞: $scheduledTime');
      print('üîî NotificationService: –ß–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥: $seconds');

      const AndroidNotificationDetails
      androidPlatformChannelSpecifics = AndroidNotificationDetails(
        'timer_channel',
        'Timer Notifications',
        channelDescription: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–∞–π–º–µ—Ä–∞ –æ—Ç–¥—ã—Ö–∞',
        importance: Importance.max,
        priority: Priority.high,
        showWhen: true,
        playSound: true,
        enableVibration: true,
        // –í–∞–∂–Ω–æ: –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ
        fullScreenIntent: true,
      );

      const DarwinNotificationDetails iOSPlatformChannelSpecifics =
          DarwinNotificationDetails(
            presentAlert: true,
            presentBadge: true,
            presentSound: true,
          );

      const NotificationDetails platformChannelSpecifics = NotificationDetails(
        android: androidPlatformChannelSpecifics,
        iOS: iOSPlatformChannelSpecifics,
      );

      await _notificationsPlugin.zonedSchedule(
        timerNotificationId,
        '–í—Ä–µ–º—è –æ—Ç–¥—ã—Ö–∞ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å!',
        '–ú–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –ø–æ–¥—Ö–æ–¥—É',
        scheduledTime,
        platformChannelSpecifics,
        androidScheduleMode: AndroidScheduleMode.exactAllowWhileIdle,
        uiLocalNotificationDateInterpretation:
            UILocalNotificationDateInterpretation.absoluteTime,
      );

      print(
        'üîî NotificationService: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ (ID: $timerNotificationId)',
      );

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ
      await _verifyScheduledNotifications();
    } catch (e) {
      print('üîî NotificationService: –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
      print('üîî NotificationService: Stack trace: ${StackTrace.current}');
      rethrow;
    }
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏)
  static Future<void> _verifyScheduledNotifications() async {
    try {
      final pendingNotifications = await _notificationsPlugin
          .pendingNotificationRequests();
      print(
        'üîî NotificationService: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${pendingNotifications.length}',
      );

      for (final notification in pendingNotifications) {
        print(
          'üîî NotificationService: - ID: ${notification.id}, Title: ${notification.title}',
        );
      }

      if (pendingNotifications.isEmpty) {
        print('üîî NotificationService: ‚ö†Ô∏è –ù–ï–¢ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!');
        print(
          'üîî NotificationService: –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ù–ï –±—ã–ª–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —Å–∏—Å—Ç–µ–º–æ–π.',
        );
        print('üîî NotificationService: –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        print('üîî NotificationService: 1. –ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Ç–æ—á–Ω—ã–µ –±—É–¥–∏–ª—å–Ω–∏–∫–∏');
        print(
          'üîî NotificationService: 2. –≠–º—É–ª—è—Ç–æ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
        );
        print('üîî NotificationService: 3. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏—è');
      }
    } catch (e) {
      print(
        'üîî NotificationService: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $e',
      );
    }
  }

  /// –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
  static Future<void> cancelTimerNotification() async {
    print(
      'üîî NotificationService: –û—Ç–º–µ–Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (ID: $timerNotificationId)',
    );
    try {
      await _notificationsPlugin.cancel(timerNotificationId);
      print('üîî NotificationService: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
    } catch (e) {
      print('üîî NotificationService: –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
      rethrow;
    }
  }
}
